# Tomcat embedded server default server.port=8080 - services depend on the default...
#  --- so for now it has to be 8080 ( if the JSP pages are required) - should be able to easily read this value and
# construct a request string but its a little convoluted in spring if you ask me...
# i tried several ways and i still have not got it and its still not clear to me ( is it
# to anyone) what spring is doing behind the scenes, so its trial and error and hack bits
# from online users until i know better.
# if the JSP pages are not required - the REST service is accessible at any configured port of the
# frontend software can request at the correct configured port number.
server.port=8080
# MySQL database connecting utility
#spring.datasource.url=jdbc:mysql://localhost:3306/sportyshoes
spring.datasource.url=jdbc:mysql://mysql:3306/sportyshoes
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/sportyshoes
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database=mysql
#spring.webservices.path='/SportyShoes-0.0.1-SNAPSHOT/'

# JPA property utility
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true

server.servlet.context-path=/
#spring.mvc.view.prefix= /WEB-INF/JSP/
spring.mvc.view.prefix= /WEB-INF/JSP/
#spring.mvc.view.prefix: /static/
#spring.mvc.view.prefix: /webapp/WEB-INF/JSP/

spring.mvc.view.suffix= .jsp

